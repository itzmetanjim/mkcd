name: Fetch MSYS2 (MSYS) binaries

on:
  workflow_dispatch:

jobs:
  fetch-msys2-binaries:
    runs-on: windows-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup MSYS2 and install MSYS packages
        uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: |
            coreutils
            grep
            sed
            gawk
            findutils
            diffutils
            file
            which
            tar
            zip
            unzip
            gzip
            bzip2
            xz

      - name: Prepare target directory and copy selected binaries (MSYS builds)
        shell: pwsh
        run: |
          $target = Join-Path $Env:GITHUB_WORKSPACE 'artifacts\msys_x86_64'
          New-Item -ItemType Directory -Force -Path $target | Out-Null

          $msysBin = 'C:\msys64\usr\bin'

          $bins = @(
            'ls.exe','cp.exe','mv.exe','rm.exe','rmdir.exe','mkdir.exe','install.exe','ln.exe',
            'readlink.exe','realpath.exe','stat.exe','touch.exe','chmod.exe','chown.exe','pwd.exe',
            'du.exe','df.exe','sync.exe','truncate.exe','cat.exe','head.exe','tail.exe','nl.exe','wc.exe',
            'cut.exe','paste.exe','join.exe','sort.exe','uniq.exe','tr.exe','od.exe','fold.exe','fmt.exe',
            'column.exe','expand.exe','unexpand.exe','sed.exe','gawk.exe','grep.exe','egrep.exe','fgrep.exe','xargs.exe','tee.exe',
            'split.exe','csplit.exe','comm.exe','find.exe','which.exe','tar.exe','gzip.exe','gunzip.exe',
            'bzip2.exe','bunzip2.exe','xz.exe','unxz.exe','zip.exe','unzip.exe','md5sum.exe','sha1sum.exe',
            'sha256sum.exe','base64.exe','uname.exe','hostname.exe','whoami.exe','id.exe','date.exe'
          )

          foreach ($b in $bins) {
            $src = Join-Path $msysBin $b
            if (Test-Path $src) {
              Copy-Item -Path $src -Destination $target -Force
              Write-Host "Copied $b"
            } else {
              Write-Host "Missing $b in MSYS usr/bin; skipping"
            }
          }

      - name: Copy dependent DLLs discovered via ldd
        shell: pwsh
        run: |
          $target = Join-Path $Env:GITHUB_WORKSPACE 'artifacts\msys_x86_64'
          $msysBin = 'C:\msys64\usr\bin'
          $bash = 'C:\msys64\usr\bin\bash.exe'

          if (-not (Test-Path $bash)) { throw 'MSYS2 bash not found' }

          $exes = Get-ChildItem -Path $target -Filter '*.exe' -File | Select-Object -ExpandProperty FullName
          $dlls = New-Object System.Collections.Generic.HashSet[string]

          foreach ($exe in $exes) {
            $exePosix = & $bash -lc "cygpath -u \"$exe\"" | Out-String
            $exePosix = $exePosix.Trim()
            if (-not $exePosix) { continue }

            $lddOut = & $bash -lc "ldd \"$exePosix\" || true" | Out-String
            foreach ($line in $lddOut -split "`n") {
              $m = [regex]::Match($line, '=>\s+(/[^\s]+)')
              if (-not $m.Success) {
                $m = [regex]::Match($line, '^\s+(/[^\s]+)')
              }
              if ($m.Success) {
                $posixPath = $m.Groups[1].Value
                if ($posixPath -like '*.dll') {
                  $winPath = $posixPath -replace '^/usr/bin/', 'C:\\msys64\\usr\\bin\\' -replace '^/mingw64/bin/', 'C:\\msys64\\mingw64\\bin\\'
                  if (Test-Path $winPath) { [void]$dlls.Add($winPath) }
                }
              }
            }
          }

          foreach ($dll in $dlls) {
            Copy-Item -Path $dll -Destination $target -Force
            Write-Host "Copied DLL: $(Split-Path $dll -Leaf)"
          }

      - name: List copied files
        shell: pwsh
        run: |
          Get-ChildItem -Path 'artifacts\msys_x86_64' -File | Sort-Object Name | ForEach-Object { Write-Host $_.Name }

      - name: Upload binaries artifact
        uses: actions/upload-artifact@v4
        with:
          name: msys2-msys-binaries-x86_64
          path: artifacts/msys_x86_64
